# 워크플로우의 이름
name: Run Crawler and Lint

# 워크플로우가 실행될 조건
on:
  schedule:
    # cron 스케줄 표현식: 4시간마다 0분에 실행
    - cron: '0 */4 * * *'
  # 수동으로 워크플로우를 실행할 수 있게 함
  workflow_dispatch:
  # main 브랜치에 push될 때도 실행
  push:
    branches:
      - main

# 워크플로우에 필요한 권한 설정
permissions:
  contents: write

# 실행될 작업(job) 목록
jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install linting dependencies
        run: pip install ruff

      - name: Run linter
        run: ruff check .

  run-crawler:
    name: Run crawler
    # lint 작업이 성공해야 실행됨
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Create ID.txt if not exists
        run: touch ID.txt

      - name: Run crawler script
        env:
          TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          TELEGRAM_CHANNEL_ID_CRAWLER: ${{ secrets.CHAT_ID }}
          SEEN_NOTICE_FILE: ID.txt
        # 변경된 파일 경로로 실행
        run: python src/main.py

      - name: Commit and push ID.txt changes
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
          git add ID.txt
          if ! git diff --staged --quiet; then
            git commit -m "Update seen notices (ID.txt)"
            git push
          else
            echo "No changes to commit."
          fi
